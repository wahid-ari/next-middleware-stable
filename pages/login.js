import { useState, useContext } from "react";
import { UserContext } from "@utils/useUser";
import Router from "next/router";
import Head from 'next/head'
import axios from 'axios';
import Footer from '@components/Footer'
import Navbar from '@components/Navbar'
import Layout from '@components/Layout';
import Input from '@components/Input';
import Button from '@components/Button';
import nookies from 'nookies'
import InputPassword from "@components/InputPassword";

export default function Login() {

  const user = useContext(UserContext);
  const [input, setInput] = useState(
    { username: "", password: "" }
  )
  const [error, setError] = useState()
  const [success, setSuccess] = useState()

  function handleChange(e) {
    setInput({
      ...input,
      [e.target.name]: e.target.value
    })
  }

  async function handleSubmit(e) {
    e.preventDefault();
    try {
      const { data } = await axios.post('/api/login', input);
      if (data.status === 200) {
        setSuccess("Success Login")
        setError("")
        user.setUsername(input.username);
        user.setToken(data.token);
        localStorage.setItem("next-jwt-auth-token", data.token);

        nookies.set(null, 'username', input.username, {})
        nookies.set(null, 'token', data.token, {})
        Router.push("/server");
      } else {
        setSuccess("")
        setError(data.error)
      }
    } catch (error) {
      console.log(error);
    }
  }

  return (
    <>
      <Head>
        <title>Login</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar />

      <Layout>

        <main className="max-w-7xl mx-auto px-4 sm:px-6 md:px-8 min-h-screen">

          <section className="text-gray-600 body-font py-8 max-w-sm mx-auto">
            <h1 className="text-center font-medium text-3xl dark:text-whitem dark:text-white mb-4">Login</h1>
            <Input onChange={handleChange} label="Username" name="username" placeholder="Username" type="text" />
            <InputPassword onChange={handleChange} label="Password" name="password" placeholder="Password" />
            <Button onClick={handleSubmit} className="w-full">Login</Button>
            {error && <p className="text-red-500 text-center mt-4 text-sm font-medium">{error}</p>}
            {success && <p className="text-green-500 text-center mt-4 text-sm font-medium">{success}</p>}
          </section>

        </main>

        <Footer />

      </Layout>

    </>
  )
}

export async function getServerSideProps(context) {
  // Parse
  const cookies = nookies.get(context)

  if (cookies.token) {
    return {
      redirect: {
        destination: "/server"
      }
    }
  }

  return {
    props: {
    }
  }
}